{{!-- import { createSelector } from 'reselect';
import { initialState } from './reducer';

/**
 * Direct selector to the {{ camelCase name }} state domain
 */

const select{{ properCase name }}Domain = state =>
  state.get('{{ camelCase name }}', initialState);

/**
 * Other specific selectors 
 */

/**
 * Default selector used by {{ properCase name }}
 */

const makeSelect{{ properCase name }} = () =>
  createSelector(select{{ properCase name }}Domain, substate => substate.toJS());

export default makeSelect{{ properCase name }};
export { select{{ properCase name }}Domain }; --}}

import { createSelector } from 'reselect';

/**
 * Direct selector to the {{ camelCase name }} state domain
 */
const selectDomain = (state) => state.get('{{ camelCase name }}');

/**
 * Other specific selectors
 */
const makeSelectSuccess = () => createSelector(selectDomain, (state) => state.get('success'));
const makeSelectResponse = () => createSelector(selectDomain, (state) => state.get('response'));
const makeSelectError = () => createSelector(selectDomain, (state) => state.get('error'));
const makeSelectRequesting = () => createSelector(selectDomain, (state) => state.get('requesting'));

export {
  makeSelectSuccess,
  makeSelectResponse,
  makeSelectRequesting,
  makeSelectError,
};
